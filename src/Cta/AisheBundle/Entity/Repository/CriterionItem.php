<?php

namespace Cta\AisheBundle\Entity\Repository;

use Devart\CommonBundle\Entity\Repository\Base;
use Doctrine\ORM\EntityNotFoundException;
use Doctrine\ORM\Query;

/**
 * CriterionItem
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CriterionItem extends Base
{
    /**
     * @param $id
     * @return CriterionItem
     */
    public function findById($id)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();

        $query = $qb->select('ci')
            ->from('CtaAisheBundle:CriterionItem', 'ci')
            ->andWhere('ci.id = :id')
            ->andWhere('ci.status = :status')
            ->setParameter('id', $id)
            ->setParameter('status', \Cta\AisheBundle\Entity\CriterionItem::ST_ACTIVE)
            ->getQuery();

        return $query->getSingleResult();
    }

    /**
     * @param $chapterNr
     * @param $paragraphNr
     * @return CriterionItem
     */
    public function findOneChapterAndParagraph($chapterNr, $paragraphNr)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();

        $query = $qb->select('ci')
            ->from('CtaAisheBundle:CriterionItem',  'ci')
            ->leftJoin('ci.criterion',              'c', Query\Expr\Join::WITH, $qb->expr()->eq('c.status', \Cta\AisheBundle\Entity\Criterion::ST_ACTIVE))
            ->andWhere('c.chapterNr = :chapter')
            ->andWhere('ci.paragraphNr = :paragraph')
            ->andWhere('ci.status = :status')
            ->setParameter('chapter', $chapterNr)
            ->setParameter('paragraph', $paragraphNr)
            ->setParameter('status', \Cta\AisheBundle\Entity\CriterionItem::ST_ACTIVE)
            ->getQuery();

        return $query->getSingleResult();
    }

    /**
     * @param $id
     * @throws \Doctrine\ORM\EntityNotFoundException
     */
    public function delete($id)
    {
        $em = $this->getEntityManager();

        $criterionItem = $em->getRepository('CtaAisheBundle:CriterionItem')->find($id);
        if (!$criterionItem) {
            throw new EntityNotFoundException('Entity with id [' . $id . '] could not be found.');
        }

        // flag criterionItemTranslations as deleted
        foreach ($criterionItem->getCriterionItemTranslations() as $criterionItemTranslations) {
            $criterionItemTranslations->setStatus(\Cta\AisheBundle\Entity\CriterionItemTranslation::ST_DELETED);
        }

        // flag certificationRequirements as deleted
        foreach ($criterionItem->getCertificationRequirements() as $certificationRequirements) {
            $certificationRequirements->setStatus(\Cta\AisheBundle\Entity\CertificationRequirement::ST_DELETED);
        }

        // flag criterionItem as deleted
        $criterionItem->setStatus(\Cta\AisheBundle\Entity\CriterionItem::ST_DELETED);

        // save changes
        $em->flush();
    }
}
