<?php

namespace Cta\AisheBundle\Entity\Repository;

use Devart\CommonBundle\Entity\Repository\Base;
use Doctrine\ORM\NoResultException;
use Doctrine\ORM\ORMInvalidArgumentException;
use Doctrine\ORM\Query;

/**
 * ReportItem
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OfflineTool extends Base
{
    /**
     * @param array $params
     * @return array
     */
    public function findOverview(array $params = array())
    {
        $result = array(
            'items' => array(),
            'count' => 0,
        );

        $qb = $this->getEntityManager()->createQueryBuilder();

        $query = $qb->select('ot', 'user_cr', 'user_mo')
            ->from('CtaAisheBundle:OfflineTool'  , 'ot')
            ->leftJoin('ot.createdBy'        , 'user_cr')
            ->leftJoin('ot.modifiedBy'       , 'user_mo')
            ->andWhere('ot.status != :status')
            ->setParameter('status', \Cta\AisheBundle\Entity\OfflineTool::ST_DELETED)
            ->orderBy('ot.createdAt', 'DESC');

        $result['count'] = $this->count($query, 'ot.id');

        if (array_key_exists('start', $params)) {
            $query->setFirstResult($params['start']);
        }

        if (array_key_exists('limit', $params)) {
            $query->setMaxResults($params['limit']);
        }

        $result['items'] = $query->getQuery()->getArrayResult();
        return $result;
    }

    /**
     * @return array
     */
    public function findActiveVersion(){
        $qb = $this->getEntityManager()->createQueryBuilder();

        $query = $qb->select('ot', 'user_cr', 'user_mo')
            ->setMaxResults(1)
            ->from('CtaAisheBundle:OfflineTool'  , 'ot')
            ->leftJoin('ot.createdBy'        , 'user_cr')
            ->leftJoin('ot.modifiedBy'       , 'user_mo')
            ->orderBy('ot.createdAt', 'DESC');

        $result = $query->getQuery()->getSingleResult();

        return $result;
    }
}
